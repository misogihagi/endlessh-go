on:
  release:
    types:
      - created  

jobs:
  build:
    name: Build and upload binary
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-22.04-2core-arm64
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/amd64
            runner: macos-13
          - platform: linux/arm64
            runner: macos-14
          - platform: windows/amd64
            runner: windows-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate build files
        run: |
          go mod tidy
          build endlessh-go

      # for linux
      - name: Compress binary
        id: compress_linux
        if: runner.os == 'Linux'
        run: |
          archive_name=$(echo endlessh-go-${{ github.event.release.name }}-${{ matrix.platform }}.tar.gz | tr / -)
          tar cfz $archive_name endlessh-go
          echo "archive_name=$archive_name" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.compress_linux.outputs.archive_name }}
          asset_name: ${{ steps.compress_linux.outputs.archive_name }}
          asset_content_type: application/gzip

      # for mac
      - name: Compress binary
        id: compress_macos
        if: runner.os == 'macOS'
        run: |
          archive_name=$(echo endlessh-go-${{ github.event.release.name }}-${{ runner.os }}.tar.gz | tr / -)
          tar cfz $archive_name endlessh-go
          echo "archive_name=$archive_name" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.compress_mac.outputs.archive_name }}
          asset_name: ${{ steps.compress_mac.outputs.archive_name }}
          asset_content_type: application/gzip

      # for mac
      - name: Compress binary
        id: compress_windows
        if: runner.os == 'Windows'
        run: |
          archive_name=$(echo endlessh-go-${{ github.event.release.name }}-${{ runner.os }}.zip | tr / -)
          zip $archive_name endlessh-go.exe
          echo "archive_name=$archive_name" >> "$GITHUB_OUTPUT"
      - name: Upload Release Asset
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.compress_windows.outputs.archive_name }}
          asset_name: ${{ steps.compress_windows.outputs.archive_name }}
          asset_content_type: application/zip
