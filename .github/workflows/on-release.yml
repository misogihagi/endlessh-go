name: On release

on:
  release:
    types: # This configuration does not affect the page_build event above
      - created
env:
  PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
  
jobs:
  build_and_push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate build files
        run: |
          mkdir dist
          go mod tidy
          GOOS=linux GOARCH=amd64 go build endlessh-go -o dist/endlessh-go
          tar cfz dist/endlessh-go-${{ github.event.release.name }}-linux-amd64.tar.gz dist/endlessh-go
          rm dist/endlessh-go
          GOOS=linux GOARCH=arm64 go build endlessh-go -o dist/endlessh-go
          tar cfz dist/endlessh-go-${{ github.event.release.name }}-linux-arm64.tar.gz dist/endlessh-go
          rm dist/endlessh-go
          GOOS=darwin GOARCH=amd64 go build endlessh-go -o dist/endlessh-go
          tar cfz dist/endlessh-go-${{ github.event.release.name }}-darwin-amd64.tar.gz dist/endlessh-go
          rm dist/endlessh-go
          GOOS=darwin GOARCH=arm64 go build endlessh-go -o dist/endlessh-go
          tar cfz dist/endlessh-go-${{ github.event.release.name }}-darwin-arm64.tar.gz dist/endlessh-go
          rm dist/endlessh-go
          GOOS=windows GOARCH=amd64 go build endlessh-go -o dist/endlessh-go.exe
          zip dist/endlessh-go-${{ github.event.release.name }}-windows-amd64.tar.gz dist/endlessh-go.exe
          rm dist/endlessh-go.exe
      - name: asd
        run: ls dist
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path:  ./dist
      - name: Generate build files
        uses: thatisuday/go-cross-build@v1
        with:
            platforms: 'linux/amd64, linux/arm64, darwin/amd64, darwin/arm64, windows/amd64'
            package: 'endlessh'
            name: 'endlessh'
            compress: 'true'
            dest: 'dist'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
      - name: Login to docker hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: Build and push
        uses: docker/build-push-action@v6.9.0
        with:
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
